Adapted for 1.7.0, without binary patch, from:



From 2b86a3f1e55c3dd55d16f0dc94432dab0a0d2faf Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Roberto=20C=2E=20S=C3=A1nchez?= <roberto@connexer.com>
Date: Thu, 19 Jan 2023 09:24:33 -0500
Subject: [PATCH] MONGOCRYPT-517 vendor Intel DFP code and also allow using
 system DFP

---
 .evergreen/debian_package_build.sh      |   2 +-
 CMakeLists.txt                          |  13 ++++-
 cmake/ImportDFP.cmake                   |  68 ++++++++++++++++++++++++
 cmake/IntelDFP.cmake                    |   4 +-
 cmake/mongocrypt-config.cmake           |  10 ++++
 third-party/IntelRDFPMathLib20U2.tar.xz | Bin 0 -> 2790216 bytes
 6 files changed, 93 insertions(+), 4 deletions(-)
 create mode 100644 cmake/ImportDFP.cmake
 create mode 100644 third-party/IntelRDFPMathLib20U2.tar.xz

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7360ed645..32fd1fd17 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -20,11 +20,14 @@ list (APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
 
 include (LTO)
 include (ImportBSON)
-include (IntelDFP)
+include (ImportDFP)
 
 if (USE_SHARED_LIBBSON AND ENABLE_BUILD_FOR_PPA)
    message (FATAL_ERROR "PPA build requires static linking to libbson")
 endif ()
+if (DEFINED MONGOCRYPT_DFP_DIR AND ENABLE_BUILD_FOR_PPA)
+   message (FATAL_ERROR "PPA build requires building with vendored Intel DFP")
+endif ()
 
 # Enable a higher warning level and warnings-as-errors
 include (MongoC-Warnings)
@@ -328,6 +331,10 @@ if (ENABLE_WINDOWS_STATIC_RUNTIME)
    target_compile_options (mongocrypt_static PUBLIC /MT)
    target_compile_options (kms_message_static PUBLIC /MT)
 endif ()
+if (MONGOCRYPT_DFP_DIR STREQUAL "USE-SYSTEM")
+   get_property (SYSTEM_DFP_LOC TARGET intel_dfp PROPERTY IMPORTED_LOCATION)
+   set (PKG_CONFIG_STATIC_LIBS "${PKG_CONFIG_STATIC_LIBS} ${SYSTEM_DFP_LOC}")
+endif ()
 
 
 if (MONGOCRYPT_CRYPTO STREQUAL CommonCrypto)
@@ -600,6 +607,10 @@ if (ENABLE_BUILD_FOR_PPA)
    endif ()
    set (PKG_CONFIG_LIBS "${PKG_CONFIG_LIBS} -pthread")
 endif ()
+if (MONGOCRYPT_DFP_DIR STREQUAL "USE-SYSTEM")
+   get_property (SYSTEM_DFP_LOC TARGET intel_dfp PROPERTY IMPORTED_LOCATION)
+   set (PKG_CONFIG_LIBS "${PKG_CONFIG_LIBS} ${SYSTEM_DFP_LOC}")
+endif ()
 set (PKG_CONFIG_CFLAGS "-I\${includedir}")
 set (PKG_CONFIG_STATIC_CFLAGS "${PKG_CONFIG_CFLAGS} -DMONGOCRYPT_STATIC_DEFINE -DKMS_MSG_STATIC")
 configure_file (
diff --git a/cmake/ImportDFP.cmake b/cmake/ImportDFP.cmake
new file mode 100644
index 000000000..a5606bffb
--- /dev/null
+++ b/cmake/ImportDFP.cmake
@@ -0,0 +1,68 @@
+#[[
+   This file handles importing the DFP (decimal floating point) library for decimal128 support. It
+   is patterned after ImportBSON in this same directory.
+
+   Initially, the only supported DFP implementation is Intel DFP. However, this module will allow
+   for the future addition of support for libdfp.
+
+   This file defines, exports, and installs one INTERFACE target: mongocrypt::intel_dfp.
+
+   The target(s) from this file are used to link the DFP library correctly for the build
+   configuration of libmongocrypt. At find_package() time, we can resolve these interface targets
+   to link to the DFP library based on the build configurations of libmongocrypt.
+
+   In the initial implementation both mongo::mongocrypt and mongo::mongocrypt_static must link to
+   mongocrypt::intel_dfp (this is because if we link to the Intel DFP which is vendored with
+   libmongocrypt then we will link the object files directly and if we use the system Intel DFP then
+   we will be linking with .a static library archives).
+
+   The default behavior is to use the Intel DFP which is vendored in this repository. By setting
+   MONGOCRYPT_DFP_DIR=USE-SYSTEM the build will assume that an appropriate Intel DFP implementation
+   can be found in a location where it has been installed system-wide (most likely under /usr or
+   /usr/local).
+]]
+
+if (DEFINED MONGOCRYPT_DFP_DIR AND NOT MONGOCRYPT_DFP_DIR STREQUAL "USE-SYSTEM")
+   message (FATAL_ERROR "The only valid value  for MONGOCRYPT_DFP_DIR is USE-SYSTEM")
+endif ()
+
+function (_import_dfp)
+   find_library (_MONGOCRYPT_SYSTEM_INTEL_DFP_STATIC "${CMAKE_STATIC_LIBRARY_PREFIX}bidgcc000${CMAKE_STATIC_LIBRARY_SUFFIX}")
+   find_path (_MONGOCRYPT_SYSTEM_INTEL_DFP_INCLUDE_DIR bid_conf.h)
+   add_library (intel_dfp STATIC IMPORTED)
+   set_target_properties (intel_dfp PROPERTIES
+      INTERFACE_INCLUDE_DIRECTORIES "${_MONGOCRYPT_SYSTEM_INTEL_DFP_INCLUDE_DIR}"
+      )
+   set_property (TARGET intel_dfp PROPERTY IMPORTED_LOCATION "${_MONGOCRYPT_SYSTEM_INTEL_DFP_STATIC}")
+   set_property (
+      CACHE _MONGOCRYPT_SYSTEM_INTEL_DFP_INCLUDE_DIR
+      PROPERTY ADVANCED
+      TRUE
+      )
+endfunction ()
+
+if (NOT DEFINED MONGOCRYPT_DFP_DIR)
+   # The user did not provide a MONGOCRYPT_DFP_DIR, so we'll set one up
+   include (IntelDFP)
+elseif (MONGOCRYPT_DFP_DIR STREQUAL "USE-SYSTEM")
+   message (STATUS "NOTE: Using system-wide Intel DFP library. This is intended only for package maintainers.")
+   set (USE_SYSTEM_INTEL_DFP "ON")
+   # Do the import in a function to isolate variable scope
+   _import_dfp ()
+
+   # Define interface targets to be used to control the DFP used at both build and import time.
+   # Refer to mongocrypt-config.cmake to see how these targets are used by consumers
+   add_library (_mongocrypt-intel_dfp INTERFACE)
+   add_library (mongocrypt::intel_dfp ALIAS _mongocrypt-intel_dfp)
+   install (
+      TARGETS _mongocrypt-intel_dfp
+      EXPORT mongocrypt_targets
+      )
+
+   # Link to Intel DFP, only exporting that usage for the local build tree.
+   # The mongocrypt-config file will later add the appropriate link library for downstream
+   # users during find_package()
+   target_link_libraries (_mongocrypt-intel_dfp INTERFACE $<BUILD_INTERFACE:intel_dfp>)
+
+endif ()
+
diff --git a/cmake/IntelDFP.cmake b/cmake/IntelDFP.cmake
index c9dc4d7ec..1dfaa21ad 100644
--- a/cmake/IntelDFP.cmake
+++ b/cmake/IntelDFP.cmake
@@ -2,12 +2,12 @@
 include (FetchContent)
 find_program (GIT_EXECUTABLE git)
 
-set (_default_url "https://netlib.org/misc/intel/IntelRDFPMathLib20U2.tar.gz")
+set (_default_url "${PROJECT_SOURCE_DIR}/third-party/IntelRDFPMathLib20U2.tar.xz")
 
 set (INTEL_DFP_LIBRARY_URL "${_default_url}"
      CACHE STRING "The URL of an Intel DFP library to use")
 set (INTEL_DFP_LIBRARY_URL_HASH
-     "SHA256=93c0c78e0989df88f8540bf38d6743734804cef1e40706fd8fe5c6a03f79e173"
+     "SHA256=ac157e69c05556f3fa468ab34caeb1114a3b88ae18241bd41cc57b85a02dd314"
      CACHE STRING "The hash of the archive that lives at INTEL_DFP_LIBRARY_URL (Spelled: <ALGO>=<digest>)")
 option (INTEL_DFP_LIBRARY_PATCH_ENABLED
         "Whether to apply the s390x compatibility patch to the Intel DFP library" ON)
diff --git a/cmake/mongocrypt-config.cmake b/cmake/mongocrypt-config.cmake
index d23545086..db82ca2f5 100644
--- a/cmake/mongocrypt-config.cmake
+++ b/cmake/mongocrypt-config.cmake
@@ -30,3 +30,13 @@ if (_using_shared_libbson AND DEFINED MONGOCRYPT_LIBBSON_SHARED_USE)
         APPEND PROPERTY INTERFACE_LINK_LIBRARIES "$<LINK_ONLY:${MONGOCRYPT_LIBBSON_SHARED_USE}>"
     )
 endif ()
+
+set (_using_system_intel_dfp "@USE_SYSTEM_INTEL_DFP@")
+
+if (_using_system_intel_dfp)
+   find_library (_MONGOCRYPT_SYSTEM_INTEL_DFP_STATIC "${CMAKE_STATIC_LIBRARY_PREFIX}bidgcc000${CMAKE_STATIC_LIBRARY_SUFFIX}")
+   set_property (
+      TARGET mongo::_mongocrypt-intel_dfp
+      PROPERTY IMPORTED_LOCATION "${_MONGOCRYPT_SYSTEM_INTEL_DFP_STATIC}"
+      )
+endif ()
